syntax = "proto3";

package message;

//msgid=0xc487
message NodeCapacityRequest{
    int32 RequestMsgID = 1;
}

//msgid=0xe684
message NodeCapacityResponse {
    bool writable=1;
    string allocId=2;
}


//msgid=0xCB05
message UploadShardRequest  {
   int32 SHARDID=1;
   int32 BPDID = 2;
   int64 VBI = 3;
   bytes BPDSIGN=4;
   bytes DAT=5;
   bytes VHF=6;
   bytes USERSIGN=7;
   string allocId=8;
}


message UploadShardResponse  {
   int32 RES= 1; 
   int32 SHARDID = 2;
   int64 VBI = 3;
   bytes VHF=4;
   bytes USERSIGN=5;
}

message UploadShard2CResponse {
   int32 RES= 1;
   string DNSIGN =2;
   uint64 seq =3;
}


//用于sn发送对账列表
//seq：哈希对应的序列号
//hash：对账用哈希
message SeqToHash{
    uint64 Seq=1;
    bytes Hash=2;
}

//msgid = 0x1818   矿机对账请求
//endseq: 本次对账的结束序列号
//nodeid：矿机id
message SliceCompareReq{
    string  TaskId =1;
    uint64  StartSeq =2;
    uint64  EndSeq =3;
    uint32  NodeId =4;
    repeated  SeqToHash CpList =5;
}

//msgid = 0x1819   矿机对账请求
message SliceCompareResp{
    string TaskId =1;
    uint32 NodeId =2;
    string ErrCode =3;
}

//msgid = 0x1820
message SliceCompareStatusReq{
    string TaskId =1;
    uint32 NodeId =2;
}

//msgid = 0x1821
message SliceCompareStatusResp{
   string  TaskId =1;
   uint64  StartSeq =2;
   uint64  EndSeq =3;
   uint32  NodeId =4;
   string  ErrCode =5;
   uint32  DnMissNum =6;
   uint32  SnMissNum =7;
   uint32  CompareNum =8;
   repeated bytes DnMissList =9;
}

//MessageID:0x1822
message CpDelStatusfileReq{
    string  TaskId=1;
    uint32  NodeId=2;
}

//MessageID:0x1823
message CpDelStatusfileResp{
    string  TaskId=1;
    uint32  NodeId=2;
    string  ErrCode=3;
}

message DownloadShardRequest {
   bytes VHF=1;
   string allocId=2;
}

message DownloadShardResponse{
   bytes data=1;
}

message NodeRegReq {
    string nodeid= 1;                           
    string owner=2;                              
    uint64 maxDataSpace=3;                 
    repeated string addrs=4;     
    bool relay=5;
}

message NodeRegResp {                        
    uint32 id= 1;                                    
    uint64 assignedSpace=2;    
    string relayUrl=3;
}

message StatusRepReq {
    uint32 id=1;
    uint32 cpu=2;
    uint32 memory=3;
    uint32 bandwidth=4;
    uint64 maxDataSpace=5;
    uint64 assignedSpace=6;
    uint64 usedSpace=7;
    repeated string addrs=8;
    bool relay=9;
    uint32 version=10;
    uint32 rebuilding=11;
    uint32 realSpace=12;
    uint64 tx=13;
    uint64 rx=14;
    string Other=15;
    string hash=16;
    uint64 allocSpace=17;
    uint32 AvailableSpace=18;
}

message StatusRepResp {
    int64 productiveSpace=1;
    string relayUrl=2;                 
}

message ErrorMessage{
    int32 code=1;
    string msg=2;
}


message StringMsg{
    string msg=1;
}

message SpotCheckTaskList{
    string taskId = 1;
    int32 snid=2;
    repeated SpotCheckTask taskList=3;
    string allocId=4;
}

message SpotCheckTask{
    int32 id = 1;
    string nodeId=2;
    string addr=3;
    bytes VHF=4;
}

message SpotCheckStatus{
    string taskId = 1;
    repeated int32 invalidNodeList=2;
}

//RS编码重建任务
//msgid=0xd761
message TaskDescription{
    bytes id = 1;
    repeated bytes hashs=2;
    repeated P2PLocation locations=3;
    int32 parityShardCount=4;
    int32 recoverId=5;
    P2PLocation backupLocation=6;
}

//id:任务ID,在上报重建结果(TaskOpResult)时,传入
//hashs:RS分片HASH列表
//locations:RS分片对应的矿机地址列表,数目与hashs一致
//parityShardCount:校验分片数目(一般32),即hashs的后32个是校验分片
//recoverId:需要恢复的分片索引,从0开始,相当于hashs[recoverId]需要恢复


//msgid=0xc258
message TaskDescriptionCP{
    bytes id = 1;
    bytes dataHash=2;
    repeated P2PLocation locations=3;
}

//副本集模式指一个小于16K的数据块,不使用RS编码,生成32个完全相同的数据分片写入32台矿机
//id:任务ID,在上报重建结果(TaskOpResult)时,传入
//hashs:副本集分片HASH(所有分片的HASH是相同的)
//locations:副本分片对应的矿机地址列表,从32台矿机中任选一个下载到数据，复制到本地即可


message P2PLocation{
    string nodeId=1;
    repeated string addrs=2;
}

//矿机收到任务请回复VoidResp
//msgid=0xe64f
message VoidResponse  {
}

//矿机重建完毕后向任务发起方SN返回结果
//msgid=0x16f3
message TaskOpResult{
    bytes id = 1;
    int32 RES=2;
}

//暂定：RES=0 成功，RES=1 失败
//矿机收到结果回复VoidResp

//MessageID:2cb0
message MultiTaskDescription{
    repeated bytes tasklist=1;
    int64 expiredTime = 2;
    int32 srcNodeID=3;
    int32 expiredTimeGap=4;
    string allocId=5;
}

//MessageID:1b31
message MultiTaskOpResult{
    repeated bytes id = 1;
    repeated int32 RES = 2;
    int32 NodeID = 3;
    int64 expiredTime = 4;
    int32 srcNodeID = 5;
}

//MessageID:93e4
message MultiTaskOpResultRes{
    int32 errCode=1;
    int32 SuccNum=2;
}

//msgid=0x4bc6
message ListDNIReq{
    string nextid= 1;
    int32 count=2;
}
//msgid=0xd6cb
message ListDNIResp{
    repeated bytes vnflist=1;
    string nextid= 2;
}

//msgid=0xd97b
message SelfVerifyQueryReq{
    string Key =1;
}

//msgid=0x58b8
message SelfVerifyQueryResp{
    string Key =1;
    uint32 BatchNum =2;
    string Date=3;
    string ErrCode =4;
}

//  本次需要校验的条数
//msgid = 0xd97a
message SelfVerifyReq{
    string  Num =1;
    string  StartItem =2;
}

// DBhash：数据库中数据分片的hash
// Datahash ：计算出来的数据分片hash
message HashToHash{
    bytes DBhash=1;
    bytes Datahash=2;
}

//id:矿机id，数字形式（比如：12398）
//entryth:校验的起始entry
//Num:本次校验的数目
//errNum:校验出错的分片数
//errCode:错误类型码
//errShard:错误的分片列表
//verBatch:自检的批次
//vrfTime :自检的时间
//msgid = 0x58b7
message SelfVerifyResp{
    string  id =1;
    string  entryth =2;
    string  Num =3;
    string  errNum =4;
    string  errCode =5;
    string  vrfBatch =6;
    string  vrfTime  =7;
    repeated HashToHash errShard =8;
}

//MessageID:0xe87a
message GcReq{
    bytes delPubKey=1;
    uint32  dnid=2;
    string  taskId=3;
    repeated bytes Gclist=4;
}

//MessageID:0xe87b
message GcResp{
    string  taskId=1;
    uint32  dnid=2;
    string  ErrCode=3;
}

//MessageID:0xe87e
message GcStatusReq{
    string  taskId=1;
    uint32  dnid=2;
}

//MessageID:0xe87f
message GcStatusResp{
    string  taskId=1;
    uint32  dnid=2;
    string  status=3;
    int32  total=4;
    int32  fail=5;
    repeated bytes errlist=6;
}

//MessageID:0xe88e
message GcdelStatusfileReq{
    string  taskId=1;
    uint32  dnid=2;
}

//MessageID:0xe88f
message GcdelStatusfileResp{
    string  taskId=1;
    uint32  dnid=2;
    string  status=3;
}

//MessageID:0x1b32
message DownloadYTFSFile{
    string name=1;
    string serverUrl=2;
    bool gzip=3;
    bytes sig=4;
}
//MessageID:0x1b33
message Debug{
    string serverUrl=1;
    bytes sig=2;
}

//MessageID:0x1b34
message DownloadTKCheck{
    string tk=1;
}

//MessageID:0xe75c
message UploadShardRequestTest  {
    int32 SHARDID=1;
    int32 BPDID = 2;
    int64 VBI = 3;
    bytes BPDSIGN=4;
    bytes DAT=5;
    bytes VHF=6;
    bytes USERSIGN=7;
    string allocId=8;
    uint32 Sleep=9;
}

//MessageID:0xe76a  测试任务消息
message TestMinerPerfTask {
    repeated string targetMa=1; // 目标地址: /ip4/xx.xx.xx.xx/tcp/xx/p2p/peerID
    int32 testType=2;  // 测试类型：0 上传
    int64 testTime=3;
    int64 timeOut=4;
}
//MessageID:0xe76b
message TestGetBlock {
    string msg=1;
    bytes pld=2;
    string allocID=3;
}
//MessageID:0xe76c
message TestGetBlockRes {
    bytes msg=1;
}
//MessageID:0xe76d 测试任务返回
message TestMinerPerfTaskRes {
    repeated string targetMa=1;
    int32 testType=2;
    int64 successCount=3;
    int64 errorCount=4;
    int64 successLatency=5;
    int64 errorLatency=6;
}

